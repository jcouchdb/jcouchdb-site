#labels Featured
How to use jcouchdb in your java applications.

= Introduction =

couchdb supports nearly all features of couchdb 0.8 except bulk document creation which will soon follow.

= The Database class =

The [http://jcouchdb.googlecode.com/svn/trunk/src/org/jcouchdb/db/Database.java org.jcouchdb.db.Database] class is your main point of interaction with couchdb. 
Let's see some simple code:

{{{
    // create a database object pointing to the database "mycouchdb" on the local host    
    Database db = new Database("localhost", "mycouchdb");

    // create a hash map document with two fields    
    Map<String,String> doc = new HashMap<String, String>();
    doc.put("foo", "value for the foo attribute");
    doc.put("bar", "value for the bar attribute");

    // create the document in couchdb
    db.createDocument(doc);
}}}

This creates a simple Document with two fields based on a HashMap. Note that the database has to already exist for it to work. Databases can be created via Futon or with the [http://jcouchdb.googlecode.com/svn/trunk/src/org/jcouchdb/db/Server.java org.jcouchdb.db.Server] class.


== Documents ==

jcouchdb offers many different ways of using java classes as couchdb documents


My goal in writing jcouchdb was to be able to directly get POJOs out of couchdb without losing the ability to use document that are partly or totally dynamic. jcouchdb uses its own json parser / generator to achieve this goal (in fact the json parser / generator might be just as usable without couchdb ).

The jon parser/generator offers some interfaces, base classes and annotations you can use to configure what types the couchdb documents are parsed to.